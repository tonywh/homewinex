# Generated by Django 3.0.7 on 2020-06-16 20:08

from django.db import migrations
import struct

def readFloat40(data, offset):
    ''' Read a 40-bit float from the data file
    '''
    # First 4-bytes are little-endian mantissa. The top bit which is always
    # set is overwritten by a sign bit.
    # Read the mantissa as an integer.
    mant = struct.unpack_from('<i', data, offset)[0]
    mant >>= 1              # Make space for the top bit, sign bit extends
    mant += 0x40000000      # Set the top bit, i.e. bit below the new sign bit

    # 5th byte is an exponent. Read the exponent as an integer and adjust it
    # to get the correct float value from the mantissa
    exp = struct.unpack_from('B', data, offset+4)[0]
    exp -= 158

    # Calculate the float value and round to 6 decimal places
    return round(float(mant) * 2**exp, 6), offset+5

def readString(data, offset):
    ''' Read a <CR> terminated string from the data file
    '''
    i = offset
    string = ''
    while data[i] != 0x0D:
        i += 1
    string += str(data[offset:i], 'utf-8')
    return string, i+1

def readRecord(data, offset):
    ''' Read one record from the data file
    '''
    record = {}
    i = offset
    record['Id'], i = readFloat40(data, i)
    record['Fruit'], i = readString(data, i)
    record['Variety'], i = readString(data, i)
    record['TA_pc'], i = readFloat40(data, i)
    record['Sugar_pc'], i = readFloat40(data, i)
    record['UnSugar_pc'], i = readFloat40(data, i)
    record['SoluSolid_pc'], i = readFloat40(data, i)
    record['BodyToAcid_pc'], i = readFloat40(data, i)
    record['Tannin_pc'], i = readFloat40(data, i)
    record['Pectin'], i = readString(data, i)
    record['Pectolaise'], i = readString(data, i)
    record['Redness'], i = readFloat40(data, i)
    record['Brownness'], i = readFloat40(data, i)
    record['Starch_pc'], i = readFloat40(data, i)
    record['Method'], i = readFloat40(data, i)
    record['Solid'], i = readString(data, i)
    record['SuggMax_g_gal'], i = readFloat40(data, i)
    return record, i

def import_bbc(apps, schema_editor):
    # Get the historical version of the Ingredient model
    Ingredient = apps.get_model('recipe', 'Ingredient')

    # Read the data from the table in web page
    datafile = open('./Home_Wine_Program_1c/Ingreds.dat', 'rb')
    data = bytes(datafile.read())
    i = 0
    value,i = readFloat40(data, i)      # Don't know what first number is
    while i + 5 < len(data):
        record,i = readRecord(data, i)
        ingredient = Ingredient(
            name = record['Fruit'],
            variety = record['Variety'],
            acid = record['TA_pc'] * 10.0,
            sugar = record['Sugar_pc'] * 10.0,
            unferm_sugar = record['UnSugar_pc'] * 10.0,
            solu_solid = record['SoluSolid_pc'] * 10.0,
            body_to_acid = record['BodyToAcid_pc'],
            tannin = record['Tannin_pc'] * 10.0,
            pectin = record['Pectin'] == 'yes',
            pectolaise = record['Pectolaise'] == 'yes',
            redness = record['Redness'],
            brownness = record['Brownness'],
            starch = record['Starch_pc'] * 10.0,
            method_id = int(record['Method']),
            liquid = 500.0 if record['Solid'] == 'yes' else 1000.0,
            suggest_max = record['SuggMax_g_gal'] / 4.55 )
        ingredient.save()

class Migration(migrations.Migration):

    dependencies = [
        ('recipe', '0002_auto_20200616_1927'),
    ]

    operations = [
        migrations.RunPython(import_bbc)
    ]
